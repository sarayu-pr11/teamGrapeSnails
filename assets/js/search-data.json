{
  
    
        "post0": {
            "title": "PBL Plan",
            "content": "Team GrapeSnails PBL Idea . Our website is going to be a math website. We hope to incorporate math webistes that we use regularly in class into our site for efficiency during lessons. Our sponsor is Mr. Deputron, the statistics teacher. He had some intersting ideas for features when we begin building our wesbtie. . Our Sponsor’s Ideas . miscellaneous math features | incorporate Random.org | incorporate Stapplet.com | . Team Ideas . a page for past projects (Response Bias Project) | Calculus Pages (limit calc, derivative calc) | make the Stapplet page more user friendly | make the Random.org page more user friendly | discussion board for questions | .",
            "url": "https://sarayu-pr11.github.io/teamGrapeSnails/markdown/2022/09/23/pbl-plan.html",
            "relUrl": "/markdown/2022/09/23/pbl-plan.html",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Math Functions Menu",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } Scanner input = new Scanner(System.in); Scanner inputStream = new Scanner(System.in); Scanner scan = new Scanner(System.in); String userInputStr; int numofNum, userNum, fact, tempType, number; double mode, maxValue, meanNumber, sdNumber, celcius, farenheit, kelvin, medianNum; int dec_num, quot, i=1, j, choice; int bin_num[] = new int[100]; int a, b, k, rowF, rowS, colF, colS; int first[][] = new int[10][10]; int second[][] = new int[10][10]; int product[][] = new int[10][10]; Scanner scanner = new Scanner(System.in); char endReply; public static final String REPORT = &quot; nFactorial of &quot;; public static final String FCONVERT = &quot; nConverted to Farenheit: &quot;; public static final String KCONVERT = &quot; nConverted to Kelvin: &quot;; // gcd public static int gcd(int a,int b) { if(b==0) return a; else return gcd(b,a%b); } // lcm public static int lcm(int n1,int n2) { return n1*n2/(gcd(n1,n2)); } //fibonacci public static int fibonacci(int n) { if (n &lt;= 1) return n; return fibonacci(n - 1) + fibonacci(n - 2); } //mean public static double meancalc (double[] nums) { double sum= 0.0; for (int i=0; i&lt;nums.length; i++) { sum +=nums[i]; } double average = sum/nums.length; return average; } // standard deviation public static double sdcalc (double[] numsSD) { double sum = 0.0; for (int i=0; i&lt;numsSD.length; i++) { sum += numsSD[i]; } double average = sum/numsSD.length; double sdsum = 0.0; double standev = 0.0; for (int j=0; j&lt;numsSD.length; j++) { sdsum += Math.pow(numsSD[j]-average, 2); standev = Math.sqrt(sdsum/numsSD.length); } return standev; } // mode public static double modecalc(double[] numsMode) { double maxValue = 0.0; int maxCount = 0, i, j; for (i=0; i &lt; numsMode.length; i++) { int count = 0; for (j=0; j &lt; numsMode.length; j++) { for (j = 0; j &lt; numsMode.length; ++j) { if (numsMode[j] == numsMode[i]) ++count; } } if (count &gt; maxCount) { maxCount = count; maxValue = numsMode[i]; } } return maxValue; } //median public static double findMed(double arr[], int n) { // sort the array Arrays.sort(arr); // check for even case if (n % 2 != 0) { return (double)arr[n / 2]; } return (double)(arr[(n - 1) / 2] + arr[n / 2]) / 2.0; } //factorial public static int findFact(int n) { int f = 1; for (int i=1; i&lt;n+1; i++) { f = f * i; } return f; } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - GCD&quot;); System.out.println(&quot;2 - LCM&quot;); System.out.println(&quot;3 - Fibonacci&quot;); System.out.println(&quot;4 - Decimal to Binary&quot;); System.out.println(&quot;5 - Factorial&quot;); System.out.println(&quot;6 - Standard Deviation&quot;); System.out.println(&quot;7 - Mean&quot;); System.out.println(&quot;8 - Mode&quot;); System.out.println(&quot;9 - Temperature Converter&quot;); System.out.println(&quot;10 - Median&quot;); System.out.println(&quot;11 - Number Sort&quot;); System.out.println(&quot;12 - Factors&quot;); System.out.println(&quot;13 - Matrices&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.println(&quot;Enter the two numbers: &quot;); int a = input.nextInt(); int b = input.nextInt(); System.out.println(&quot;The two numbers are: &quot; + a + &quot; and &quot; + b); System.out.println(&quot;The GCD of the two numbers is: &quot; + gcd(a, b)); break; case 2: System.out.println(&quot;Enter the two numbers: &quot;); int n1 = input.nextInt(); int n2 = input.nextInt(); System.out.println(&quot;The two numbers are: &quot; + n1 + &quot; and &quot; + n2); System.out.println(&quot;The LCM of the two numbers is: &quot; + lcm(n1, n2)); break; case 3: System.out.println(&quot;Enter a number: &quot;); int N = input.nextInt(); System.out.println(&quot;The number is: &quot; + N); for (int i = 0; i &lt; N; i++) { System.out.print(fibonacci(i) + &quot; &quot;); }; break; case 4: System.out.print(&quot;Input a Decimal Number : n&quot;); dec_num = input.nextInt(); System.out.print(&quot;Number is: &quot; + dec_num + &quot; n&quot;); quot = dec_num; while(quot != 0) { bin_num[i++] = quot%2; quot = quot/2; } System.out.print(&quot;Binary number is: &quot;); for(j=i-1; j&gt;0; j--) { System.out.print(bin_num[j]); } System.out.print(&quot; n&quot;); break; case 5: System.out.print(&quot; nInput an integer: &quot;); userInputStr = input.nextLine(); userNum = Integer.parseInt(userInputStr); fact = findFact(userNum); System.out.print(REPORT + userNum +&quot; is &quot;+fact); break; case 6: System.out.print(&quot;how many values would you like to find the standard deviation of?&quot;); userInputStr = input.nextLine(); numofNum = Integer.parseInt(userInputStr); double[] numsSD = new double [numofNum]; //creates array with doubles, nomofNum number of values in the array for (int i=0; i&lt;numofNum; i++) { System.out.print(&quot; nenter value:&quot;); userInputStr = input.nextLine(); numsSD[i] = Double.parseDouble(userInputStr); System.out.print(numsSD[i]); } sdNumber = sdcalc(numsSD); System.out.print(&quot; nthe standard deviation is &quot; +sdNumber); break; case 7: System.out.print(&quot;how many values would you like to average?&quot;); userInputStr = input.nextLine(); numofNum = Integer.parseInt(userInputStr); double[] nums = new double [numofNum]; //creates array with doubles, nomofNum number of values in the array for (int i=0; i&lt;numofNum; i++) { System.out.print(&quot; nenter value:&quot;); userInputStr = input.nextLine(); nums[i] = Double.parseDouble(userInputStr); System.out.print(nums[i]); } meanNumber = meancalc(nums); System.out.print(&quot; nthe mean is &quot; +meanNumber); break; case 8: System.out.print(&quot;how many values would you like to find the mode of?&quot;); userInputStr = input.nextLine(); numofNum = Integer.parseInt(userInputStr); double[] numsMode = new double [numofNum]; //creates array with doubles, numofNum number of values in the array for (int i=0; i &lt; numofNum; i++) { System.out.print(&quot; nenter value: &quot;); userInputStr = input.nextLine(); numsMode[i] = Double.parseDouble(userInputStr); System.out.print(numsMode[i]); } mode = modecalc(numsMode); System.out.print(&quot; nthe mode is &quot; +mode); break; case 9: // initialize variables celcius = 0.; farenheit = 0.; kelvin = 0.; System.out.print(&quot;This program converts degress in Celcius to Farenheit or Kelvin n&quot;); // get degress in celcius from user System.out.print(&quot; nTemperature in Celcius: &quot;); userInputStr = inputStream.nextLine(); celcius = Double.parseDouble(userInputStr); System.out.print(celcius); // input from user, what do they want to convert to while(true) { System.out.print(&quot; nConvert to (1)Farenheit or (2)Kelvin: &quot;); userInputStr = inputStream.nextLine(); tempType = Integer.parseInt(userInputStr); if ((tempType == 1) || (tempType == 2)) { break; } else { System.out.print(tempType); System.out.println(&quot; nPlease input either 1 or 2&quot;); } } System.out.print(tempType); //conversion if (tempType == 1) //convert to farenheit { farenheit = (celcius*1.8)+32; //multiple by 1.8 and then add 32, result is a double System.out.print(FCONVERT); System.out.print(farenheit); } else //convert to kelvin { kelvin = celcius + 273.15; //add 273.15, result is a double System.out.print(KCONVERT); System.out.print(kelvin); } break; case 10: System.out.print(&quot;how many values would you like to input?&quot;); userInputStr = inputStream.nextLine(); numofNum = Integer.parseInt(userInputStr); double[] arr = new double [numofNum]; //creates array with doubles, numofNum number of values in the array for (int i=0; i&lt;numofNum; i++) //gets info from user for each spot in array { System.out.print(&quot; nenter value: &quot;); userInputStr = inputStream.nextLine(); arr[i] = Double.parseDouble(userInputStr); System.out.print(arr[i]); } int n = arr.length; System.out.println(&quot; nMedian: &quot; + findMed(arr, n)); break; case 11: System.out.print(&quot;how many values would you like to input?&quot;); userInputStr = inputStream.nextLine(); numofNum = Integer.parseInt(userInputStr); double[] arr2 = new double [numofNum]; //creates array with doubles, numofNum number of values in the array for (int i=0; i&lt;numofNum; i++) //gets info from user for each spot in array { System.out.print(&quot; nenter value: &quot;); userInputStr = inputStream.nextLine(); arr2[i] = Double.parseDouble(userInputStr); System.out.print(arr2[i]); } Arrays.sort(arr2); //sort array System.out.println(&quot; n nSorted Numbers: &quot;); for (int i=0; i&lt;numofNum; i++) //prints each spot in array { System.out.print(arr2[i]+ &quot;, &quot;); } break; case 12: System.out.print(&quot;Input a Whole Number : &quot; + &quot; n&quot;); number = scan.nextInt(); System.out.print(&quot;Your factors are: &quot; + &quot; n&quot;); for (int i = 1; i &lt;= number; ++i ) { if (number % i == 0) { System.out.print(i + &quot; &quot; + &quot; n&quot;); } } break; case 13: System.out.println(&quot;Enter Rows and Cols of First Matrix&quot;); rowF = scanner.nextInt(); colF = scanner.nextInt(); System.out.println(&quot;Enter Elements of First Matrix&quot;); // Input first matrix from user for (a = 0; a &lt; rowF; a++) { for (b = 0; b &lt; colF; b++) { first[a][b] = scanner.nextInt(); } } System.out.println(&quot;Enter Rows and Cols of Second Matrix&quot;); rowS = scanner.nextInt(); colS = scanner.nextInt(); System.out.println(&quot;Enter Elements of Second Matrix&quot;); // Input second matrix from user for (a = 0; a &lt; rowS; a++) { for (b = 0; b &lt; colS; b++) { second[a][b] = scanner.nextInt(); } } // Multiplying two matrices for (a = 0; a &lt; rowF; a++) { for (b = 0; b &lt; colF; b++) { for (k = 0; k &lt; colS; k++) { product[a][b] += first[a][k] * second[k][b]; } } } // Printing Product Matrix System.out.println(&quot;Product Matrix&quot;); for (a = 0; a &lt; rowF; a++) { for (b = 0; b &lt; colS; b++) { System.out.print(product[a][b] + &quot; &quot;); } System.out.print(&quot; n&quot;); } break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Choose from these choices - 1 - GCD 2 - LCM 3 - Fibonacci 4 - Decimal to Binary 5 - Factorial 6 - Standard Deviation 7 - Mean 8 - Mode 9 - Temperature Converter 10 - Median 11 - Number Sort 12 - Factors 13 - Matrices 0 - Quit - 1: Enter the two numbers: The two numbers are: 12 and 6 The GCD of the two numbers is: 6 2: Enter the two numbers: The two numbers are: 10 and 15 The LCM of the two numbers is: 30 3: Enter a number: The number is: 5 0 1 1 2 3 4: Input a Decimal Number : Number is: 12 Binary number is: 1100 5: Input an integer: java.lang.NumberFormatException: For input string: &#34;&#34;: Not a number, try again. 5: Input an integer: Factorial of 7 is 5040 6: how many values would you like to find the standard deviation of? enter value:12.0 enter value:13.0 enter value:14.0 enter value:15.0 enter value:16.0 the standard deviation is 1.4142135623730951 7: how many values would you like to average? enter value:3.0 enter value:4.0 enter value:5.0 the mean is 4.0 8: how many values would you like to find the mode of? enter value: 2.0 enter value: 2.0 enter value: 3.0 the mode is 2.0 3: Enter a number: The number is: 2 0 1 9: This program converts degress in Celcius to Farenheit or Kelvin Temperature in Celcius: 35.0 Convert to (1)Farenheit or (2)Kelvin: 1 Converted to Farenheit: 95.0 10: how many values would you like to input? enter value: 1.0 enter value: 2.0 enter value: 3.0 enter value: 4.0 enter value: 5.0 Median: 3.0 11: how many values would you like to input? enter value: 2.0 Sorted Numbers: 2.0, 12: Input a Whole Number : Your factors are: 1 2 17 34 13: Enter Rows and Cols of First Matrix Enter Elements of First Matrix Enter Rows and Cols of Second Matrix Enter Elements of Second Matrix Product Matrix 8 10 0: Goodbye, World! .",
            "url": "https://sarayu-pr11.github.io/teamGrapeSnails/jupyter/2022/09/05/menu.html",
            "relUrl": "/jupyter/2022/09/05/menu.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Features",
            "content": "Features . . Alice . Factorial | Number Sorting | Temperature conversion | Median | . Iris . Mean | Mode | Standard Deviation | . Samaya . Fibonacci | LCM | GCD | Matricies | . Sarayu . Matricies | Factors | Decimal to Binary | .",
            "url": "https://sarayu-pr11.github.io/teamGrapeSnails/markdown/2022/09/01/features.html",
            "relUrl": "/markdown/2022/09/01/features.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://sarayu-pr11.github.io/teamGrapeSnails/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://sarayu-pr11.github.io/teamGrapeSnails/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://sarayu-pr11.github.io/teamGrapeSnails/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://sarayu-pr11.github.io/teamGrapeSnails/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}